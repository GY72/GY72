C51 COMPILER V9.54   BUZZER                                                                08/31/2022 15:02:54 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BUZZER
OBJECT MODULE PLACED IN .\Objects\buzzer.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE ..\src\lib\buzzer.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\buzzer.lst) TABS(5) OBJECT(.\Objects\buzzer.obj)

line level    source

   1          /****************************************************************************
   2           * buzzer.c
   3           *
   4           *    Copyright (C) Hiklife. All rights reserved.
   5           *   Author: Lgx <lgx@hiklife.com> 2019-03
   6           * 
   7           *  ËúÇÈ∏£Âô®Áõ∏ÂÖ≥ÂáΩÊï∞
   8           *
   9           ****************************************************************************/
  10          
  11          #include "..\include_s.h"
  12          
  13          /***************************************************************/
  14          u8 buzz_step;
  15          
  16          #if MUSIC_BUZZ //Èü≥‰πêËúÇÈ∏£Âô®
  17          static TONE_t crom * pTone;
  18          
  19          /****************************************
  20           * ÂáΩÊï∞ÂêçÔºö     music_buzz_FrqOff
  21           * ËØ¥ÊòéÔºö   Èü≥‰πêËúÇÈ∏£Âô®È¢ëÁéáËæìÂá∫ÂÖ≥
  22           * ËæìÂÖ•Ôºö   --
  23           * ËæìÂá∫Ôºö   --
  24           ****************************************/
  25          void music_buzz_FrqOff(void)
  26          {
  27   1           BUZZ_FRQ_OFF();
  28   1      
  29   1           PWM0DL = 0;
  30   1           PWM0DH = 0;
  31   1           PWM0CON = 0;
  32   1      }
  33          
  34          /****************************************
  35           * ÂáΩÊï∞ÂêçÔºö     music_buzz_SetFreq
  36           * ËØ¥ÊòéÔºö   Èü≥‰πêËúÇÈ∏£Âô®È¢ëÁéáËæìÂá∫ËÆæÁΩÆ
  37           * ËæìÂÖ•Ôºö   u8 PWMÈ¢ëÁéá/Èü≥Ë∞ÉÈ¢ëÁéá
  38           *             Fpwm      =   Fsys / PWMÂàÜÈ¢ë
  39           *             PWM Âë®Êúü:    Fpwm / F (ÁõÆÊ†áÈ¢ëÁéá)
  40           * ËæìÂá∫Ôºö   Êó†
  41           ****************************************/
  42          void music_buzz_SetFreq(u16 f)
  43          {
  44   1           PWM0PL = LOBYTE(f);
  45   1           PWM0PH = HIBYTE(f);
  46   1           PWM0DL = LOBYTE(f>>1);
  47   1           PWM0DH = HIBYTE(f>>1);
  48   1      
  49   1          PWM0CON = bit10011001;              // 8ÂàÜÈ¢ë PWM Out
  50   1      }
  51          
  52          /* crom tone_freq_tbl[] = 
  53          {
  54          //   C7,  CS7,   D7,  DS7,   E7,   F7,  FS7,   G7,  GS7,   A7,  AS7,    B7  
C51 COMPILER V9.54   BUZZER                                                                08/31/2022 15:02:54 PAGE 2   

  55          //    1,   #1,    2,   #2,    3,    4,   #4,    5,   #5,    6,   #6,   ##1  
  56               2093, 2217, 2349, 2489, 2637, 2794, 2960, 3136, 3322, 3520, 3729, 3951
  57          }; */
  58          
  59          #define TONE_D5H     622           //DË∞É re È´òÂçäÈü≥ d2#
  60          #define TONE_E5           659
  61          #define TONE_F5           698
  62          #define TONE_F5H     740
  63          #define TONE_G5           784
  64          #define TONE_G5H     831
  65          #define TONE_A5           880
  66          #define TONE_A5H     932
  67          #define TONE_B5           987
  68          
  69          #define TONE_C6          1046
  70          #define TONE_C6H    1109
  71          #define TONE_D6          1175
  72          #define TONE_D6H    1244
  73          #define TONE_E6          1318
  74          #define TONE_F6          1397
  75          #define TONE_F6H    1480
  76          #define TONE_G6          1568
  77          #define TONE_G6H    1661                //---
  78          #define TONE_A6          1760
  79          #define TONE_A6H    1865
  80          #define TONE_B6          1975
  81          
  82          #define TONE_C7          2093
  83          #define TONE_C7H    2217
  84          #define TONE_D7          2349
  85          #define TONE_D7H    2489
  86          #define TONE_E7          2637
  87          #define TONE_F7          2794                //===
  88          #define TONE_F7H    2960
  89          #define TONE_G7          3136
  90          #define TONE_G7H    3322
  91          #define TONE_A7          3520
  92          #define TONE_A7H    3729
  93          #define TONE_B7          3951      
  94          
  95          crom TONE_t Tone1[] = {{2000, 60, 140}, {2500, 40, 100},{2000, 50, 120},{1500, 80, 1660},{FREQ_NO, 0, 0}};
             -     //‰∏äÁîµÂíåÂº¶Èü≥
  96          crom TONE_t Tone2[] = {{1500, 50, 120}, {2000, 40, 100},{2500, 80, 1660},{FREQ_NO, 0, 0}};     //ÂºÄÊú∫ÂíåÂº¶È
             -ü≥
  97          crom TONE_t Tone3[] = {{2500, 50, 120}, {2000, 40, 100},{1500, 80, 1660},{FREQ_NO, 0, 0}};     //ÂÖ≥Êú∫ÂíåÂº¶È
             -ü≥
  98          crom TONE_t Tone4[] = {{2000, 140, 1500},{FREQ_NO, 0, 0}};  // ÂçïÈü≥
  99          crom TONE_t Tone5[] = {{2900, 140, 1500},{FREQ_NO, 0, 0}};  //ALARM WARNING
 100          crom TONE_t Tone6[] = {{2500, 100, 240}, {2000, 100, 1260},{FREQ_NO, 0, 0}}; //finish 
 101          
 102          crom TONE_t * tone_tbl[] = {Tone1,Tone2,Tone3,Tone4,Tone5,Tone6};
 103          /****************************************
 104           * ÂáΩÊï∞ÂêçÔºö     music_buzz_start
 105           * ËØ¥ÊòéÔºö   Èü≥‰πêËúÇÈ∏£Âô®ÂêØÂä®ËæìÂá∫
 106           * ËæìÂÖ•Ôºö   Â£∞Èü≥Á±ªÂûãÁ¥¢Âºï
 107           * ËæìÂá∫Ôºö   --
 108           ****************************************/ 
 109          void music_buzz_start(u8 type)
 110          {
 111   1           buzz_step = 2;
 112   1      
 113   1           pTone = tone_tbl[type];
C51 COMPILER V9.54   BUZZER                                                                08/31/2022 15:02:54 PAGE 3   

 114   1      
 115   1           buzz_step = 0;
 116   1      }
 117          
 118          /****************************************
 119           * ÂáΩÊï∞ÂêçÔºö     music_buzz_ctrl
 120           * ËØ¥ÊòéÔºö   Èü≥‰πêËúÇÈ∏£Âô®ÊéßÂà∂ÂáΩÊï∞ 10msË∞ÉÁî®‰∏ÄÊ¨°
 121           * ËæìÂÖ•Ôºö   Â£∞Èü≥Á±ªÂûãÁ¥¢Âºï
 122           * ËæìÂá∫Ôºö   --
 123           ****************************************/ 
 124          void music_buzz_ctrl(void)
 125          {
 126   1           static TONE_t Tone;
 127   1      
 128   1           switch (buzz_step)
 129   1           {
 130   2           case 0:
 131   2                Tone = *pTone;
 132   2      
 133   2                /* Tone.freq == freq_NO */              //ÊòØÁªìÊùüÁ¨¶
 134   2                if ((Tone.freq == FREQ_NO) || ((Tone.PWROFF_time == 0)))
 135   2                {
 136   3                     buzz_step = 2;
 137   3                     break;    
 138   3                }
 139   2      
 140   2                music_buzz_SetFreq(BEEP_REATE_FREQ/(Tone.freq));
 141   2                Tone.PWRON_time = Tone.PWROFF_time - Tone.PWRON_time;
 142   2      
 143   2                buzz_step = 1;
 144   2                break;
 145   2      
 146   2           case 1:
 147   2                if (Tone.PWROFF_time != 0)
 148   2                {
 149   3                     Tone.PWROFF_time--;
 150   3                     if (Tone.PWROFF_time < Tone.PWRON_time)
 151   3                     {
 152   4                          BUZZ_PWR_OFF();     
 153   4                     }
 154   3                     else
 155   3                     {
 156   4                          BUZZ_PWR_ON();
 157   4                     }
 158   3                }
 159   2                else
 160   2                {
 161   3                     pTone++;                 //Âèñ‰∏ã‰∏Ä‰∏™Èü≥Ë∞É
 162   3                     buzz_step = 0;
 163   3                }
 164   2                break;
 165   2      
 166   2           default:
 167   2                BUZZ_PWR_OFF();     
 168   2                music_buzz_FrqOff();
 169   2                break;
 170   2           }
 171   1      }
 172          
 173          /****************************************
 174           * ÂáΩÊï∞ÂêçÔºö     music_buzz_init
 175           * ËØ¥ÊòéÔºö   Èü≥‰πêËúÇÈ∏£Âô®ÂàùÂßãÂåñÂáΩÊï∞
C51 COMPILER V9.54   BUZZER                                                                08/31/2022 15:02:54 PAGE 4   

 176           * ËæìÂÖ•Ôºö   --
 177           * ËæìÂá∫Ôºö   --
 178           ****************************************/ 
 179          void music_buzz_init(void)
 180          {
 181   1           BUZZ_PWR_OFF();     
 182   1           music_buzz_FrqOff();
 183   1           buzz_step = 5;
 184   1      }
 185          
 186          /***************************************************************/
 187          /***************************************************************/
 188          /***************************************************************/
 189          #else     //ÊôÆÈÄöËúÇÈ∏£Âô®
              static Buzz_t crom * buzz;
              
              /****************************************
               * ÂáΩÊï∞ÂêçÔºö     BEEP_SetFreq
               * ËØ¥ÊòéÔºö   ÊôÆÈÄöËúÇÈ∏£Âô®È¢ëÁéáËæìÂá∫ËÆæÁΩÆ
               * ËæìÂÖ•Ôºö   -- Âõ∫ÂÆö4KHZ
               *             Fpwm      =   Fsys / PWMÂàÜÈ¢ë
               *             PWM Âë®Êúü:    Fpwm / F (ÁõÆÊ†áÈ¢ëÁéá)
               * ËæìÂá∫Ôºö   Êó†
               ****************************************/
              void buzz_on(void)
              {
                   PWMP = 255;
                   PWMD = 125;
                   PWMCON = bit10110001;              // 16ÂàÜÈ¢ë
              }
              
              /****************************************
               * ÂáΩÊï∞ÂêçÔºö     BEEP_Off
               * ËØ¥ÊòéÔºö   ÊôÆÈÄöËúÇÈ∏£Âô®È¢ëÁéáËæìÂá∫ÂÖ≥
               * ËæìÂÖ•Ôºö   --
               * ËæìÂá∫Ôºö   --
               ****************************************/
              void buzz_off(void)
              {
                   BUZZ_FRQ_OFF();
                   PWM1DL = 0;
                   PWM1DH = 0;
                   PWM1CON = 0;
              }
              
              crom Buzz_t buzz0[] = {{ 30, 10}, {  0, 0}};
              crom Buzz_t buzz1[] = {{100, 10}, {  0, 0}};
              crom Buzz_t buzz2[] = {{300, 10}, {  0, 0}};
              crom Buzz_t buzz3[] = {{500, 10}, {  0, 0}};
              crom Buzz_t buzz4[] = {{ 10, 5}, { 10, 5},{ 10, 5},{0, 0}};
              crom Buzz_t buzz5[] = {{100, 200},{100, 200},{100, 200},{100, 200},{100, 200},{0, 0}};
              crom Buzz_t buzz6[] = {{ 10, 5}, { 10, 5},{0, 0}};
              
              crom Buzz_t * buzz_type[] = {buzz0,buzz1,buzz2,buzz3,buzz4,buzz5,buzz6};
              
              /****************************************
               * ÂáΩÊï∞ÂêçÔºö     normal_buzz_start
               * ËØ¥ÊòéÔºö   ÊôÆÈÄöËúÇÈ∏£Âô®ÂêØÂä®ËæìÂá∫
               * ËæìÂÖ•Ôºö   Â£∞Èü≥Á±ªÂûãÁ¥¢Âºï
               * ËæìÂá∫Ôºö   --
               ****************************************/ 
              void normal_buzz_start(u8 type)
C51 COMPILER V9.54   BUZZER                                                                08/31/2022 15:02:54 PAGE 5   

              {
                   if (type >= TOTAL_BUZZ_N) type = 0;
              
                   buzz   = buzz_type[type];
                   buzz_step = 0;
              }
              
              /****************************************
               * ÂáΩÊï∞ÂêçÔºö     buzzctrl
               * ËØ¥ÊòéÔºö   ÊôÆÈÄöËúÇÈ∏£Âô®ÊéßÂà∂ÂáΩÊï∞ 10msË∞ÉÁî®‰∏ÄÊ¨°
               * ËæìÂÖ•Ôºö   Â£∞Èü≥Á±ªÂûãÁ¥¢Âºï
               * ËæìÂá∫Ôºö   --
               ****************************************/ 
              void normal_buzz_ctrl(void)
              {
                   static Buzz_t Tone;
              
                   switch (buzz_step)
                   {
                   case 0:
                        Tone = *buzz;
              
                        //ÊòØÁªìÊùüÁ¨¶
                        if ((Tone.on_time == 0) && ((Tone.off_time == 0)))
                        {
                             buzz_step = 3;
                             break;    
                        }
              
                        buzz_on();
                        BUZZ_PWR_ON();
                        buzz_step = 1;
                        break;
              
                   case 1:
                        if (Tone.on_time != 0)
                             Tone.on_time--;
                        else
                             buzz_step = 2;
                        break;
                   
                   case 2:
                        BUZZ_PWR_OFF();
                        if (Tone.off_time != 0)
                        {
                             Tone.off_time--;
                        }
                        else
                        {
                             buzz++;                  //Âèñ‰∏ã‰∏Ä‰∏™Èü≥Ë∞É
                             buzz_step = 0;
                        }
                        break;
              
                   default:
                        buzz_off();
                        BUZZ_PWR_OFF();
                        break;
                   }
              }
              
              /****************************************
C51 COMPILER V9.54   BUZZER                                                                08/31/2022 15:02:54 PAGE 6   

               * ÂáΩÊï∞ÂêçÔºö     buzz_init
               * ËØ¥ÊòéÔºö   ÊôÆÈÄöËúÇÈ∏£Âô®ÂàùÂßãÂåñÂáΩÊï∞
               * ËæìÂÖ•Ôºö   --
               * ËæìÂá∫Ôºö   --
               ****************************************/ 
              void normal_buzz_init(void)
              {
                   buzz_off();
                   buzz_step = 5;
              }
              
              #endif
 312          
 313          
 314          
 315          
 316          
 317          
 318          
 319          
 320          
 321          
 322          
 323          
 324          
 325          
 326          
 327          
 328          
 329          
 330          
 331          
 332          
 333          
 334          
 335          
 336          
 337          
 338          
 339          
 340          
 341          
 342          
 343          
 344          
 345          
 346          
 347          
 348          
 349          
 350          
 351          
 352          
 353          
 354          
 355          
 356          
 357          
 358          
 359          
 360          

C51 COMPILER V9.54   BUZZER                                                                08/31/2022 15:02:54 PAGE 7   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =    138    ----
   XDATA SIZE       =      9    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
